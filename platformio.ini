; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = wemos_d1_uno

[env:wemos_d1_uno]
; mac ADDRESS 9C9C1F4631EB for WeMos D1 (uno) board
platform = espressif8266
board = esp12e
framework = arduino
board_build.f_cpu = 8000000L
lib_deps = 
	fabiuz7/RTCMemory@^1.0.3
	knolleary/PubSubClient@^2.8
	matmunk/DS18B20@^1.0.0
	paulstoffregen/OneWire@^2.3.5
upload_port = com6
monitor_port = com6
monitor_speed = 115200
build_flags =
    -D FW_VERSION=47
    -D DEBUG

    -D DALLAS_GPIO=13

    -D USE_MQTT
    -D MQTT_TOPIC=\"7133egyptian/out/sensors/sensor/json\"
    -D SSID_TOPIC=\"7133egyptian/out/sensors/sensor/ssidscan\"

    ; -D USE_DWEET
    -D DWEET_THING=\"22668c1c-8d2c-4eec-986d-52bbafc9d1ed\"

    -D DEEP_SLEEP_TIME_SECONDS=15
    -D DEEP_SLEEP

    -D VCC_CUTOFF=-100
    -D CALIBRATE_VCC
    -D VCC_MEASURE_MODE=1       ; 1 = use internal VCC, 0 = use A0 input
    ; ADC to volts equation is: volts = (ADC_TO_VOLTS_M * ADC value + ADC_TO_VOLTS_B) + VCC_CORRECTION
    ; When VCC_MEASURE_MODE==1, the ADC value is the internal voltage in millivolts so divide value by 1000 to get volts.
    -D ADC_TO_VOLTS_M=0.001
    -D ADC_TO_VOLTS_B=0
    -D VCC_CORRECTION=0.049   ; technically is VCC_MEASURE_MODE=1, this value coult be 0 and ADC_TO_VOLTS_B could be the correction.
    
[env:sensor1]
; MAC address 84F3EB0F95EB
platform = espressif8266
board = esp07
framework = arduino
board_build.f_cpu = 80000000L
lib_deps = 
	fabiuz7/RTCMemory@^1.0.3
	knolleary/PubSubClient@^2.8
	matmunk/DS18B20@^1.0.0
	paulstoffregen/OneWire@^2.3.5
build_flags =
    -D DALLAS_GPIO=13
    -D USE_MQTT
    -D MQTT_TOPIC=\"7133egyptian/out/sensors/sensor1/json\"
    -D SSID_TOPIC=\"7133egyptian/out/sensors/sensor1/ssidscan\"
    ; -D USE_DWEET
    -D DWEET_THING=\"ebd1425c-9026-452b-8178-7201bd977b55\"
    -D VCC_CORRECTION=-0.242 
    -D VCC_MEASURE_MODE=1   
    -D FW_VERSION=41
    -D DEEP_SLEEP
    -D DEBUG
    ;-D SCAN_SSIDS
    
upload_port = com6
monitor_port = com6
monitor_speed = 115200

[env:sensor2]
platform = espressif8266
board = esp12e
framework = arduino
board_build.f_cpu = 80000000L
lib_deps = 
	fabiuz7/RTCMemory@^1.0.3
	knolleary/PubSubClient@^2.8
	matmunk/DS18B20@^1.0.0
	paulstoffregen/OneWire@^2.3.5
build_flags =
    -D DALLAS_GPIO=13
    -D USE_MQTT
    -D MQTT_TOPIC=\"7133egyptian/out/sensors/sensor2/json\"
    -D SSID_TOPIC=\"7133egyptian/out/sensors/sensor2/ssidscan\"
    -D USE_DWEET
    -D DWEET_THING=\"c440d18e-4fa7-4eb7-bafb-499b19de97ab\"   
    -D VCC_CORRECTION=0.338 
    -D VCC_MEASURE_MODE=1   
    -D FW_VERSION=41
    -D DEEP_SLEEP
    ; -D DEBUG
    
upload_port = com6
monitor_port = com6
monitor_speed = 115200

[env:sensor3]
; MAC address F4CFA2D7F5C7
platform = espressif8266
board = esp12e
framework = arduino
board_build.f_cpu = 80000000L
lib_deps = 
	fabiuz7/RTCMemory@^1.0.3
	knolleary/PubSubClient@^2.8
	matmunk/DS18B20@^1.0.0
	paulstoffregen/OneWire@^2.3.5
build_flags =
    -D FW_VERSION=53
    ; -D DEBUG

    -D DALLAS_GPIO=13

    -D USE_MQTT
    -D MQTT_TOPIC=\"7133egyptian/out/sensors/sensor3/json\"
    -D SSID_TOPIC=\"7133egyptian/out/sensors/sensor3/ssidscan\"

    -D USE_DWEET
    -D DWEET_THING=\"e9151350-1f91-49cc-bd4e-92e6c8316960\"

    -D DEEP_SLEEP_TIME_SECONDS=60
    -D DEEP_SLEEP

    -D VCC_CUTOFF=3.0
    ; -D CALIBRATE_VCC
    -D VCC_MEASURE_MODE=0       ; 1 = use internal VCC, 0 = use A0 input
    ; ADC to volts equation is: volts = (ADC_TO_VOLTS_M * ADC value + ADC_TO_VOLTS_B) + VCC_CORRECTION
    ; When VCC_MEASURE_MODE==1, the ADC value is the internal voltage in millivolts so divide value by 1000 to get volts.
    ; Emperical values are measured and charted in Excel then a linear trendline is plotted in a scatter chart of the 
    ; measured values.  The reultant trend line equation is used to populate the _m and _B values below.
    -D ADC_TO_VOLTS_M=0.003475691
    -D ADC_TO_VOLTS_B=0.653057769
    -D VCC_CORRECTION=0.0       ; technically is VCC_MEASURE_MODE=1, this value could be 0 and ADC_TO_VOLTS_B could be the correction.
    
upload_port = com7
monitor_port = com7
monitor_speed = 115200